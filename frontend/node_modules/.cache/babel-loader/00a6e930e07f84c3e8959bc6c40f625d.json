{"ast":null,"code":"import _regeneratorRuntime from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/haukewitte/Development/mtg/frontend/src/components/Search/Search.jsx\";\nimport React from 'react';\nimport { Card } from 'antd';\nimport { getCards } from '../../network/mtgApi';\nimport Cards from './Cards';\nimport Search from './SearchField';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      cards: []\n    };\n\n    _this.onSearch = function _callee(searchString) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('this', _assertThisInitialized(_this), _this.setState);\n\n              _this.setState({\n                cards: [],\n                loading: true\n              }, function () {}); // const data = await getCards(searchString)\n              // const sortedCards = data.sort(card => (card.name.toLowerCase() === searchString.toLowerCase() ? -1 : 1))\n              // this.setState({ cards: sortedCards, loading: false })\n\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onSearch('re');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cards = _this$state.cards,\n          loading = _this$state.loading;\n      return null;\n      return React.createElement(Card, {\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Search, {\n        onSearch: this.onSearch,\n        style: {\n          width: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Cards, {\n        cards: cards,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/haukewitte/Development/mtg/frontend/src/components/Search/Search.jsx"],"names":["React","Card","getCards","Cards","Search","App","state","loading","cards","onSearch","searchString","console","log","setState","height","width","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,K;;UAMRC,Q,GAAW,iBAAMC,YAAN;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,iCAA0B,MAAKC,QAA/B;;AACA,oBAAKA,QAAL,CAAc;AAAEL,gBAAAA,KAAK,EAAE,EAAT;AAAaD,gBAAAA,OAAO,EAAE;AAAtB,eAAd,EAA4C,YAAM,CAAE,CAApD,EAFS,CAGT;AACA;AACA;;;AALS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;wCAJS;AAClB,WAAKE,QAAL,CAAc,IAAd;AACD;;;6BAUQ;AAAA,wBACoB,KAAKH,KADzB;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQD,OADR,eACQA,OADR;AAEP,aAAO,IAAP;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEO,UAAAA,MAAM,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKL,QAAvB;AAAiC,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEP,KAAd;AAAqB,QAAA,OAAO,EAAED,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAzBeP,KAAK,CAACgB,S;;AA4BxB,eAAeX,GAAf","sourcesContent":["import React from 'react'\nimport { Card } from 'antd'\nimport { getCards } from '../../network/mtgApi'\n\nimport Cards from './Cards'\nimport Search from './SearchField'\n\nclass App extends React.Component {\n  state = { loading: true, cards: [] }\n\n  componentDidMount() {\n    this.onSearch('re')\n  }\n\n  onSearch = async searchString => {\n    console.log('this', this, this.setState)\n    this.setState({ cards: [], loading: true }, () => {})\n    // const data = await getCards(searchString)\n    // const sortedCards = data.sort(card => (card.name.toLowerCase() === searchString.toLowerCase() ? -1 : 1))\n    // this.setState({ cards: sortedCards, loading: false })\n  }\n\n  render() {\n    const { cards, loading } = this.state\n    return null\n\n    return (\n      <Card style={{ height: '100%' }}>\n        <Search onSearch={this.onSearch} style={{ width: 400 }} />\n        <Cards cards={cards} loading={loading} />\n      </Card>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}