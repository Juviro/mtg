{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = require(\"axios\");\n\nvar endpoint = \"https://api.scryfall.com\";\nvar rateLimit = 100;\nvar lastQuery = 0;\n\nfunction sleep() {\n  var ms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n\nvar MagicQuerier =\n/*#__PURE__*/\nfunction () {\n  function MagicQuerier() {\n    _classCallCheck(this, MagicQuerier);\n  }\n\n  _createClass(MagicQuerier, [{\n    key: \"query\",\n    value: function query(apiPath, _query, post) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var lastError, result, i, _ref;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (Array.isArray(apiPath)) {\n                  apiPath = apiPath.join(\"/\");\n                }\n\n                i = 0;\n\n              case 2:\n                if (!(i < MagicQuerier.retry.attempts)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 5;\n                return this.tryQuery(\"\".concat(apiPath), _query, post);\n\n              case 5:\n                _ref = _context.sent;\n                result = _ref.result;\n                lastError = _ref.lastError;\n\n                if (!(result || !this.canRetry(lastError))) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"break\", 15);\n\n              case 10:\n                _context.next = 12;\n                return sleep(MagicQuerier.retry.timeout);\n\n              case 12:\n                i++;\n                _context.next = 2;\n                break;\n\n              case 15:\n                MagicQuerier.lastError = lastError;\n                return _context.abrupt(\"return\", result ? result.data : {\n                  data: []\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"queryPage\",\n    value: function queryPage(emitter, apiPath, query) {\n      var page = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var results, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, card;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.query(apiPath, Object.assign({}, query, {\n                  page: page\n                }));\n\n              case 2:\n                results = _context2.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context2.prev = 6;\n                _iterator = results.data[Symbol.iterator]();\n\n              case 8:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                card = _step.value;\n\n                if (!emitter.cancelled) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                return _context2.abrupt(\"break\", 16);\n\n              case 12:\n                emitter.emit(\"data\", card);\n\n              case 13:\n                _iteratorNormalCompletion = true;\n                _context2.next = 8;\n                break;\n\n              case 16:\n                _context2.next = 22;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](6);\n                _didIteratorError = true;\n                _iteratorError = _context2.t0;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.prev = 23;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 25:\n                _context2.prev = 25;\n\n                if (!_didIteratorError) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 28:\n                return _context2.finish(25);\n\n              case 29:\n                return _context2.finish(22);\n\n              case 30:\n                if (!results.has_more) {\n                  _context2.next = 37;\n                  break;\n                }\n\n                if (emitter.cancelled) {\n                  _context2.next = 37;\n                  break;\n                }\n\n                if (!emitter.willCancelAfterPage) {\n                  _context2.next = 36;\n                  break;\n                }\n\n                emitter.cancel();\n                _context2.next = 37;\n                break;\n\n              case 36:\n                return _context2.abrupt(\"return\", this.queryPage(emitter, apiPath, query, page + 1).catch(function (err) {\n                  emitter.emit(\"error\", err);\n                }));\n\n              case 37:\n                if (!emitter.cancelled) emitter.emit(\"end\");\n                emitter.emit(\"done\");\n\n              case 39:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 18, 22, 30], [23,, 25, 29]]);\n      }));\n    }\n  }, {\n    key: \"tryQuery\",\n    value: function tryQuery(apiPath, query, post) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var now, timeSinceLastQuery, timeUntilNextQuery, lastError, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                now = Date.now();\n                timeSinceLastQuery = now - lastQuery;\n\n                if (!(timeSinceLastQuery >= rateLimit)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                lastQuery = now;\n                _context3.next = 10;\n                break;\n\n              case 6:\n                timeUntilNextQuery = rateLimit - timeSinceLastQuery;\n                lastQuery += timeUntilNextQuery;\n                _context3.next = 10;\n                return sleep(timeUntilNextQuery);\n\n              case 10:\n                _context3.next = 12;\n                return axios_1.default.request({\n                  data: post,\n                  method: post ? \"POST\" : \"GET\",\n                  params: query,\n                  url: \"\".concat(endpoint, \"/\").concat(apiPath)\n                }).catch(function (_ref2) {\n                  var response = _ref2.response;\n                  lastError = response.data;\n                });\n\n              case 12:\n                _context3.t0 = _context3.sent;\n\n                if (_context3.t0) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.t0 = undefined;\n\n              case 15:\n                result = _context3.t0;\n                return _context3.abrupt(\"return\", {\n                  result: result,\n                  lastError: lastError\n                });\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"canRetry\",\n    value: function canRetry(error) {\n      if (error.code == \"not_found\" || error.code == \"bad_request\") return false;\n      return !MagicQuerier.retry.canRetry || MagicQuerier.retry.canRetry(error);\n    }\n  }]);\n\n  return MagicQuerier;\n}();\n\nMagicQuerier.lastQuery = 0;\nMagicQuerier.retry = {\n  attempts: 1\n};\nexports.default = MagicQuerier;","map":{"version":3,"sources":["/Users/haukewitte/Development/mtg/frontend/node_modules/scryfall-sdk/out/util/MagicQuerier.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","axios_1","require","endpoint","rateLimit","lastQuery","sleep","ms","setTimeout","MagicQuerier","apiPath","query","post","Array","isArray","join","i","retry","attempts","tryQuery","lastError","canRetry","timeout","data","emitter","page","assign","results","card","cancelled","emit","has_more","willCancelAfterPage","cancel","queryPage","catch","err","now","Date","timeSinceLastQuery","timeUntilNextQuery","default","request","method","params","url","response","undefined","error","code"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = require(\"axios\");\nconst endpoint = \"https://api.scryfall.com\";\nconst rateLimit = 100;\nlet lastQuery = 0;\nfunction sleep(ms = 0) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nclass MagicQuerier {\n    query(apiPath, query, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Array.isArray(apiPath)) {\n                apiPath = apiPath.join(\"/\");\n            }\n            let lastError;\n            let result;\n            for (let i = 0; i < MagicQuerier.retry.attempts; i++) {\n                ({ result, lastError } = yield this.tryQuery(`${apiPath}`, query, post));\n                if (result || !this.canRetry(lastError))\n                    break;\n                yield sleep(MagicQuerier.retry.timeout);\n            }\n            MagicQuerier.lastError = lastError;\n            return result ? result.data : { data: [] };\n        });\n    }\n    queryPage(emitter, apiPath, query, page = 1) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield this.query(apiPath, Object.assign({}, query, { page }));\n            for (const card of results.data) {\n                if (emitter.cancelled)\n                    break;\n                emitter.emit(\"data\", card);\n            }\n            if (results.has_more) {\n                if (!emitter.cancelled) {\n                    if (emitter.willCancelAfterPage)\n                        emitter.cancel();\n                    else\n                        return this.queryPage(emitter, apiPath, query, page + 1)\n                            .catch(err => { emitter.emit(\"error\", err); });\n                }\n            }\n            if (!emitter.cancelled)\n                emitter.emit(\"end\");\n            emitter.emit(\"done\");\n        });\n    }\n    tryQuery(apiPath, query, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = Date.now();\n            const timeSinceLastQuery = now - lastQuery;\n            if (timeSinceLastQuery >= rateLimit) {\n                lastQuery = now;\n            }\n            else {\n                const timeUntilNextQuery = rateLimit - timeSinceLastQuery;\n                lastQuery += timeUntilNextQuery;\n                yield sleep(timeUntilNextQuery);\n            }\n            let lastError;\n            const result = (yield axios_1.default.request({\n                data: post,\n                method: post ? \"POST\" : \"GET\",\n                params: query,\n                url: `${endpoint}/${apiPath}`,\n            }).catch(({ response }) => {\n                lastError = response.data;\n            })) || undefined;\n            return { result, lastError };\n        });\n    }\n    canRetry(error) {\n        if (error.code == \"not_found\" || error.code == \"bad_request\")\n            return false;\n        return !MagicQuerier.retry.canRetry || MagicQuerier.retry.canRetry(error);\n    }\n}\nMagicQuerier.lastQuery = 0;\nMagicQuerier.retry = { attempts: 1 };\nexports.default = MagicQuerier;\n"]},"metadata":{},"sourceType":"script"}