{"ast":null,"code":"import _slicedToArray from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/haukewitte/Development/mtg/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/haukewitte/Development/mtg/frontend/src/components/Search/Card.jsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 40px;\\n  left: 23px;\\n  font-size: 30px;\\n  color: white;\\n  background-color: black;\\n  border-radius: 50%;\\n  padding: 5px;\\n  opacity: 0.6;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 10px;\\n  width: 223px;\\n  height: 310px;\\n  display: flex;\\n  position: relative;\\n  border-radius: 11px;\\n  align-items: center;\\n  justify-content: center;\\n  border: 1px solid #e3e3e3;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'antd';\nimport CardLoader from './CardSpinner';\nvar CardWrapper = styled.div(_templateObject());\nvar StyledImage = styled.img(_templateObject2());\nvar SwapIcon = styled(Icon).attrs({\n  type: 'sync'\n})(_templateObject3());\nexport default (function (card) {\n  console.log(card);\n  var isTwoFaced = !card.image_uris;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSide = _useState2[0],\n      setCurrentSide = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var swapSides = function swapSides() {\n    setCurrentSide(currentSide ? 0 : 1);\n    setIsLoading(true);\n  };\n\n  var displayedCard = isTwoFaced ? card.card_faces[currentSide] : card;\n  return React.createElement(CardWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(StyledImage, {\n    alt: displayedCard.name,\n    src: displayedCard.image_uris.normal,\n    onLoad: function onLoad() {\n      return setIsLoading(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), isLoading && React.createElement(CardLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), isTwoFaced && !isLoading && React.createElement(SwapIcon, {\n    onClick: swapSides,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/haukewitte/Development/mtg/frontend/src/components/Search/Card.jsx"],"names":["React","useState","styled","Icon","CardLoader","CardWrapper","div","StyledImage","img","SwapIcon","attrs","type","card","console","log","isTwoFaced","image_uris","currentSide","setCurrentSide","isLoading","setIsLoading","swapSides","displayedCard","card_faces","name","normal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,IAAMC,WAAW,GAAGH,MAAM,CAACI,GAAV,mBAAjB;AAYA,IAAMC,WAAW,GAAGL,MAAM,CAACM,GAAV,oBAAjB;AAMA,IAAMC,QAAQ,GAAGP,MAAM,CAACC,IAAD,CAAN,CAAaO,KAAb,CAAmB;AAClCC,EAAAA,IAAI,EAAE;AAD4B,CAAnB,CAAH,oBAAd;AAcA,gBAAe,UAAAC,IAAI,EAAI;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAMG,UAAU,GAAG,CAACH,IAAI,CAACI,UAAzB;;AAFqB,kBAGiBf,QAAQ,CAAC,CAAD,CAHzB;AAAA;AAAA,MAGdgB,WAHc;AAAA,MAGDC,cAHC;;AAAA,mBAIajB,QAAQ,CAAC,IAAD,CAJrB;AAAA;AAAA,MAIdkB,SAJc;AAAA,MAIHC,YAJG;;AAMrB,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBH,IAAAA,cAAc,CAACD,WAAW,GAAG,CAAH,GAAO,CAAnB,CAAd;AACAG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAIA,MAAME,aAAa,GAAGP,UAAU,GAAGH,IAAI,CAACW,UAAL,CAAgBN,WAAhB,CAAH,GAAkCL,IAAlE;AAEA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEU,aAAa,CAACE,IAAhC;AAAsC,IAAA,GAAG,EAAEF,aAAa,CAACN,UAAd,CAAyBS,MAApE;AAA4E,IAAA,MAAM,EAAE;AAAA,aAAML,YAAY,CAAC,KAAD,CAAlB;AAAA,KAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,SAAS,IAAI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,EAGGJ,UAAU,IAAI,CAACI,SAAf,IAA4B,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEE,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH/B,CADF;AAOD,CAnBD","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Icon } from 'antd'\nimport CardLoader from './CardSpinner'\n\nconst CardWrapper = styled.div`\n  margin: 10px;\n  width: 223px;\n  height: 310px;\n  display: flex;\n  position: relative;\n  border-radius: 11px;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #e3e3e3;\n`\n\nconst StyledImage = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n`\n\nconst SwapIcon = styled(Icon).attrs({\n  type: 'sync',\n})`\n  position: absolute;\n  top: 40px;\n  left: 23px;\n  font-size: 30px;\n  color: white;\n  background-color: black;\n  border-radius: 50%;\n  padding: 5px;\n  opacity: 0.6;\n`\n\nexport default card => {\n  console.log(card)\n  const isTwoFaced = !card.image_uris\n  const [currentSide, setCurrentSide] = useState(0)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const swapSides = () => {\n    setCurrentSide(currentSide ? 0 : 1)\n    setIsLoading(true)\n  }\n  const displayedCard = isTwoFaced ? card.card_faces[currentSide] : card\n\n  return (\n    <CardWrapper>\n      <StyledImage alt={displayedCard.name} src={displayedCard.image_uris.normal} onLoad={() => setIsLoading(false)} />\n      {isLoading && <CardLoader />}\n      {isTwoFaced && !isLoading && <SwapIcon onClick={swapSides} />}\n    </CardWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}