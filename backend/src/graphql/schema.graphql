################################# Card #################################

type Card {
  # Core card fields
  id: String!
  set: String!
  name: String!
  image_uris: ImageUris
  card_faces: [CardFace!]
  prices: Prices!
  rarity: String!
  cmc: Float!
  legalities: Legalities!
  purchase_uris: PurchaseUris!
  oracle_id: String!
  rulings_uri: String!
  colors: [String]
  color_identity: [String]
  previewImg: String

  # Additional card fields
  owned: Boolean!
  totalAmount: Int!
  minPrice: Float!
  imgKey: String!
  isTwoFaced: Boolean!
  isCommanderLegal: Boolean!
  allSets: [Card!]!
  primaryTypes: [String!]!
  subTypes: [String!]!

  # used only for allSets
  set_name: String

  # TODO: rename deck amount to deckAmount / deckAmountFoil ?
  # used by both Deck and allSets
  amount: Int!
  amountFoil: Int!

  # Deck specific fields
  zone: String!

  # Collectiom specific fields
  createdAt: String
  sumPrice: Float
}

type Set {
  id: String!
  set: String!
  prices: Prices!
  image_uris: ImageUris
  card_faces: [CardFace!]
}

type PurchaseUris {
  tcgplayer: String
  cardmarket: String
}

type Prices {
  eur: String
  usd: String
  usd_foil: String
}

type Legalities {
  standard: String
  modern: String
  commander: String
}

type CardFace {
  name: String!
  image_uris: ImageUris
  colors: [String]
}

type ImageUris {
  small: String
  normal: String
  art_crop: String
}

type CachedCard {
  i: String!
  n: String!
  o: String!
  k: String
}

################################# Deck #################################

type Deck {
  id: String!
  name: String!
  createdAt: String!
  lastEdit: String!
  imgSrc: String!
  cards: [Card!]!
}
################################# Collection #################################

type Collection {
  id: String!
  cards: [Card!]!
}

################################# User #################################

type User {
  id: String!
  name: String!
  avatar: String!
  email: String!
}

################################# Queries #################################

type Query {
  user: User!

  deck(id: String!): Deck!
  decks: [Deck!]!

  collection: Collection!

  card(id: String!): Card!
  cardsByOracleId(oracle_id: String!): Card!
  cachedCards: [CachedCard!]!
}

################################# Mutations #################################

type Mutation {
  ########## Deck ##########
  createDeck: Deck!
  addCardsToDeck(deckId: String!, cards: [CardInputType!]!): Deck!
  editDeck(deckId: String!, newProperties: EditDeckFieldsInput!): Deck!
  editDeckCard(
    cardId: String!
    deckId: String!
    newProps: EditCardsPropsInput!
  ): Card!
  deleteDeck(deckId: String!): Boolean
  deleteFromDeck(cardId: String!, deckId: String!): Deck!
  duplicateDeck(deckId: String!): String!

  ########## Collection ##########
  addToCollection(cards: [AddToCollectionInput]!): [Card]!
  changeCollection(
    cardOracleId: String!
    added: [ChangeCollectionInput!]
    edited: [ChangeCollectionInput!]
    deleted: [String!]
  ): Card!
  deleteFromCollection(cardIds: [String]!): Boolean!

  ########## Session ##########
  login(token: String): LoginResponse!
  logout: Boolean
}

################################# Deck #################################

input EditDeckFieldsInput {
  name: String
  imgSrc: String
}

input CardInputType {
  id: String!
  amount: Int
}

input EditCardsPropsInput {
  id: String
  zone: String
  amount: Int
}

################################# Collection #################################

input AddToCollectionInput {
  id: String!
  amount: Int
}

input ChangeCollectionInput {
  id: String!
  amount: Int
  amountFoil: Int
}

################################# Session #################################

type LoginResponse {
  session: String!
}
