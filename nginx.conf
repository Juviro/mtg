# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

# Load brotli modules
load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    brotli on;
    brotli_comp_level 6;
    brotli_static on;
    brotli_types text/plain text/css application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon image/vnd.microsoft.icon image/bmp image/svg+xml;

    log_format main
        '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        server_name juviro.ddns.net;

        # react app & front-end files
        location / {
            root /var/www/croc/;
            try_files $uri /index.html;
        }
        auth_basic "Please Authenticate";
        auth_basic_user_file /etc/apache2/.htpasswd;

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/juviro.ddns.net/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/juviro.ddns.net/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    server {
        # react app & front-end files
        location / {
            root /var/www/mtg/;
            try_files $uri /index.html;
        }

        # node api reverse proxy
        location /mtg-api/ {
            proxy_pass http://localhost:4000/mtg-api/;
        }

        # caching
        #location ~* \.(?:css|js)$ {
           expires 1y;
           add_header Cache-Control "public";
        #}

        server_name mythic-commander.com;

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/mythic-commander.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/mythic-commander.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }
    #server {
    #     server_name juviro.ddns.net;
    #
    #     # react app & front-end files
    #     location / {
    #         root /var/www/wedding/;
        #         try_files $uri /index.html;
    #     }
    # }

    server {
        if ($host = mythic-commander.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        listen 80;
        server_name mythic-commander.com;
        return 404; # managed by Certbot
    }

    server {
        if ($host = juviro.ddns.net) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        listen 80;
        server_name juviro.ddns.net;
        return 404; # managed by Certbot
}}